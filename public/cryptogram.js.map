{
  "version": 3,
  "sources": ["modules/Keyboard.js", "modules/Clue.js", "modules/utils.js", "modules/Tile.js", "modules/Puzzle.js", "modules/game.js", "modules/fallback.js"],
  "sourcesContent": ["const keys = [\n  [\n    ...'1234567890-'.split(''),\n  ],\n  [\n    ...'QWERTYUIOP'.split(''),\n    'Backspace',\n  ],\n  [\n    //'Tab',\n    ...'ASDFGHJKL'.split(''),\n  ],\n  [\n    'Shift',\n    ...'ZXCVBNM'.split(''),\n    'Enter',\n  ],\n];\n\nconst keyboard = document.createElement('div');\nlet shiftKey = false;\n\nfunction makeButton(key) {\n  const button = document.createElement('button');\n  button.dataset.key = key;\n  button.innerText = getLabel(key);\n  if (key === 'Shift') {\n    button.classList.toggle('active', shiftKey);\n  }\n  if (button.innerText !== key) {\n    button.dataset.special = '';\n  }\n  button.tabIndex = -1;\n  button.addEventListener('click', onClick);\n  return button;\n}\n\nfunction onClick() {\n  const { key } = this.dataset;\n  if (!key) throw new Error('???');\n  document.dispatchEvent(new KeyboardEvent('keydown', {\n    key,\n    shiftKey,\n  }));\n}\n\nfunction updateShiftButton() {\n  document.querySelectorAll('button[data-key=\"Shift\"]').forEach((el) => {\n    el.classList.toggle('active', shiftKey);\n  });\n}\n\ndocument.addEventListener('keydown', ({ key, isTrusted }) => {\n  if (key === 'Shift') {\n    shiftKey = isTrusted || !shiftKey;\n    updateShiftButton();\n  }\n});\n\ndocument.addEventListener('keyup', ({ key }) => {\n  if (key !== 'Shift') return;\n  shiftKey = false;\n  updateShiftButton();\n});\n\nfunction getLabel(key) {\n  switch (key) {\n    case 'Tab':\n        return '\u21C6';\n    case 'Shift':\n      return '\u2191';\n    case 'Enter':\n      return '\u21B5';\n    case 'Backspace':\n    case 'Delete':\n      return '\u2190';\n    default:\n      return key;\n  }\n}\n\nkeys.forEach((row) => {\n  const container = document.createElement('div');\n  container.classList.add('keyboard-row');\n  row.forEach((key) => {\n    container.append(makeButton(key));\n  });\n  keyboard.append(container);\n});\nkeyboard.classList.add('keyboard');\ndocument.body.append(keyboard);\n", "const EVENT_NAME = 'ClueUpdate';\nconst UPDATE_EVENT = new CustomEvent(EVENT_NAME);\n\nexport default class Clue {\n  static get SYMBOL() {\n    return '_';\n  }\n  static #uniqueId = -1;\n\n  #eventManager = document.createElement('div');\n  #locked;\n  #char = Clue.SYMBOL;\n  #code = 0;\n\n  constructor(code = '') {\n    if (code instanceof Clue) {\n      this.#code = code.#code;\n      this.#char = code.#char;\n    } else if (typeof code === 'string') {\n      if (code) this.#set(code);\n    } else if (Number.isInteger(code)) {\n      if (code < 0) {\n        this.#code = Clue.#uniqueId--;\n      } else {\n        this.#code = code;\n      }\n    } else {\n      throw new Error(code);\n    }\n  }\n\n  get char() {\n    return this.#char;\n  }\n\n  get code() {\n    return this.#code;\n  }\n\n  isSet() {\n    return this.char !== Clue.SYMBOL && this.char.length === 1;\n  }\n\n  isPuzzle() {\n    return Number.isInteger(this.code) && this.code;\n  }\n\n  set(symbol = '')  {\n    if (!this.code) return;\n    if (symbol) {\n      this.#set(symbol);\n    } else {\n      this.#set(Clue.SYMBOL)\n    }\n  }\n\n  onChange(listener) {\n    this.#eventManager.addEventListener(EVENT_NAME, listener);\n  }\n\n  #set(symbol = '') {\n    if (!symbol) throw new Error(symbol);\n    if (this.char === symbol || this.char.length > 1) return;\n    this.#isLocked();\n    this.#char = symbol;\n    // Dispatch event\n    this.#locked = EVENT_NAME;\n    this.#eventManager.dispatchEvent(UPDATE_EVENT);\n    this.#locked = false;\n  }\n\n  #isLocked() {\n    if (!this.#locked) return;\n    throw new Error(this.#locked);\n  }\n\n  toString() {\n    return this.char;\n  }\n}\n", "export function removeClass(className) {\n  document.querySelectorAll(`.${className}`)\n    .forEach(({ classList }) => classList.remove(className));\n}\n", "import Puzzle from './Puzzle.js';\nimport { updateKeyboard } from './game.js';\nimport { removeClass } from './utils.js';\n\nconst tileContent = document.querySelector('#tile').innerHTML;\n\nexport default class Tile {\n  static get SPECIAL() {\n    return [...Puzzle.ALPHA, '_'];\n  }\n\n  #clue;\n  #puzzle;\n  #container;\n\n  /**\n   * @param {import('./Clue')} clue\n   * @param {import('./Puzzle')} puzzle\n   */\n  constructor(clue, puzzle) {\n    this.#clue = clue;\n    this.#puzzle = puzzle;\n\n    this.#container = document.createElement('div');\n    this.#reset();\n    clue.onChange(() => {\n      try {\n        this.#update();\n      } catch {\n        this.#reset();\n      }\n    });\n  }\n\n  get container() {\n    return this.#container;\n  }\n\n  get isSpace() {\n    return this.#clue.char === ' ';\n  }\n\n  get isUnknown() {\n    if (this.#clue.code < 0) {\n      return this.#clue.char;\n    }\n    return false;\n  }\n\n  set(char) {\n    const { code } = this.#clue;\n    if (!code || (char && !Puzzle.ALPHA.includes(char))) {\n      return false;\n    }\n    return this.#puzzle.set(code, char);\n  }\n\n  #reset() {\n    const { container } = this;\n    container._tile = this;\n    container.classList.add('tile');\n    container.innerHTML = tileContent;\n    if (this.#clue.isPuzzle()) {\n      container.classList.add('clickable');\n      container.addEventListener('click', onClick);\n    }\n    this.#update();\n  }\n\n  #update() {\n    const { code, char } = this.#clue;\n    this.container.querySelector('.symbol').textContent = getChar(char);\n    this.container.querySelector('.number').textContent = getCode(code);\n\n    this.container.classList.toggle('special', char.length > 1 || !Tile.SPECIAL.includes(char));\n  }\n}\n\nfunction getChar(char) {\n  if (char === '_') {\n    return ' ';\n  }\n  return char;\n}\n\nfunction getCode(code) {\n  if (!code || !Number.isInteger(code)) {\n    return '';\n  }\n  if (code < 0) {\n    return '?'\n  }\n  return code;\n}\n\nfunction onClick() {\n  if (this.classList.contains('selected')) return;\n  removeClass('selected');\n  this.classList.add('selected');\n  updateKeyboard();\n}\n", "import Clue from './Clue.js';\nimport Tile from './Tile.js';\n\nconst ALPHA = 'abcdefghijklmnopqrstuvwxyz'.split('');\n\nexport default class Puzzle {\n  static get ALPHA() {\n    return ALPHA;\n  }\n  /**\n   * @type {Set<Clue>}\n   */\n  #clues = new Set();\n\n  constructor(clues = [], guesses = []) {\n    clues.forEach((word = [], index) => {\n      if (!word.length || word[0] === 0) return;\n      if (index) {\n        this.#clues.add(new Clue(' '));\n      }\n      word.forEach((clue) => this.#clues.add(new Clue(clue)));\n    });\n    if (!this.length) return;\n    guesses.forEach(([num, char]) => {\n      const number = Number(num);\n      if (\n        !Number.isInteger(number) ||\n        typeof char !== 'string' ||\n        !this.numbers.includes(number) || (\n          number > 0 &&\n          !this.letters.includes(char)\n        )\n      ) return;\n      this.set(number, char);\n    });\n  }\n\n  get letters() {\n    const letters = new Set(ALPHA);\n\n    this.#values.forEach(({ char, code }) => {\n      if (!Number.isInteger(code) || code < 0) return;\n      letters.delete(char.toLowerCase());\n    });\n\n    return [...letters];\n  }\n\n  get numbers() {\n    const numbers = new Set([0]);\n    numbers.delete(0);\n    for (const clue of this.#values) {\n      if (clue.isSet() || !clue.isPuzzle()) continue;\n      numbers.add(clue.code);\n    }\n    return [...numbers];\n  }\n\n  get message() {\n    return this.#values.join('');\n  }\n\n  get solved() {\n    return !this.#values.some(({ char: symbol }) => symbol === Clue.SYMBOL);\n  }\n\n  get length() {\n    return this.#clues.size;\n  }\n\n  get #values() {\n    return [...this.#clues.values()];\n  }\n\n  set(number, letter = '') {\n    if (!Number.isInteger(number)) throw new Error(number);\n    if (number === 0) throw new Error(number);\n    if (typeof letter !== 'string') throw new Error(letter);\n    if (letter) {\n      if (!ALPHA.includes(letter)) throw new Error(letter);\n      if (number > 0 && !this.letters.includes(letter)) return false;\n    }\n    for (const clue of this.#values) {\n      if (clue.code !== number) continue;\n      const isSameCharacter = clue.char === letter;\n      clue.set(letter);\n      if (number > 0) continue;\n      if (!isSameCharacter) break;\n      return false;\n    }\n    return true;\n  }\n\n  tiles() {\n    return this.#values.map(clue => new Tile(clue, this));\n  }\n\n  mapping() {\n    return this.#values.reduce((acc, clue) => {\n      if (clue.isSet() && clue.isPuzzle()) {\n        acc.set(clue.code, clue.char);\n      }\n      return acc;\n    }, new Map());\n  }\n\n  toString() {\n    return [\n      this.message,\n      `Numbers: ${this.numbers.join(' ')}`,\n      `Letters: ${this.letters.join('')}`,\n    ].join('\\n');\n  }\n}\n", "import './Keyboard.js';\nimport Puzzle from './Puzzle.js';\nimport { removeClass } from './utils.js';\n\n/**\n * @type {HTMLDivElement}\n */\nconst board = document.querySelector('#board');\n/**\n * @type {Puzzle?}\n */\nlet current;\n\nfunction load(rawPuzzle = '', guesses = []) {\n  // TODO: Validate puzzle? No guesses for characters in puzzle.\n  // TODO: rawPuzzle.replaceAll(/\\//g, '\\n').matchAll(/([a-z]+|-?\\d+|[^,\\/\\s]|,$)/gmi);\n  const clues = rawPuzzle.split(/[\\/;]/)\n    .map((word) => word.split(',')\n      .map((clue) => {\n        const num = Number(clue);\n        // Cryptogram uses 27, so... we'll allow 30 \"cyphers\"\n        if (Number.isInteger(num) && num <= 30) {\n          return num;\n        }\n        return clue;\n      }));\n\n  const puzzle = new Puzzle(clues, guesses);\n  if (!puzzle.length) return;\n\n  current = puzzle;\n  // Clear board\n  board.textContent = '';\n\n  // Add tiles\n  let word = newWordGroup();\n  puzzle.tiles().forEach(({ container, isSpace }) => {\n    if (isSpace) {\n      board.append(container);\n      word = newWordGroup();\n    } else {\n      word.append(container);\n    }\n  });\n  updateKeyboard();\n}\n\ndocument.addEventListener('keydown', (event) => {\n  if (!current) return;\n  const {\n    ctrlKey,\n    repeat,\n    shiftKey,\n  } = event;\n  if (ctrlKey) return;\n  const char = getChar(event);\n  if (repeat || typeof char !== 'string' || char.length > 1) return;\n\n  const set = document.querySelector('.selected')?._tile.set(char);\n  if (!set) return;\n\n  updateUrlParams(current.mapping());\n  if (shiftKey && char) { // Don't skip on delete\n    selectNext();\n  }\n  updateKeyboard();\n});\n\nwindow.addEventListener('popstate', processURL)\n\nfunction getChar(event) {\n  const key = event.key;\n  switch (key) {\n    case 'Escape': {\n      removeClass('selected');\n      return;\n    }\n    case 'Tab':\n      event.preventDefault();\n      // fallthrough\n    case 'Enter': {\n      selectNext(event.shiftKey && event.isTrusted);\n      return;\n    }\n    case 'Shift':\n      return;\n    case 'Backspace':\n    case 'Delete':\n    case ' ':\n      return '';\n    default:\n      return key.toLowerCase();\n  }\n}\n\nfunction selectNext(reverse = false) {\n  const selected = document.querySelector('.selected');\n  const elements = [...document.querySelectorAll('.board .clickable')];\n  const length = elements.length;\n  if (!selected) {\n    const next = reverse ? length - 1 : 0;\n    elements.at(next).classList.add('selected');\n    return;\n  }\n  selected.classList.remove('selected');\n  const index = elements.indexOf(selected) + 1;\n  if (!index) return;\n  const modifier = reverse ? -2 : (index === length ? -length : 0);\n  const next = index + modifier;\n  elements.at(next)?.classList.add('selected');\n}\n\nfunction newWordGroup() {\n  const group = document.createElement('div');\n  group.classList.add('word');\n  board.append(group);\n  return group;\n}\n\nfunction processURL() {\n  const {\n    pathname,\n    search,\n  } = location;\n  if (!pathname && !search) return;\n  const params = new URLSearchParams(search);\n  const rawPuzzle = params.get('puzzle') || pathname;\n  if (!rawPuzzle) return;\n  params.delete('puzzle');\n\n  load(rawPuzzle, [...params.entries()]);\n}\n\nfunction updateUrlParams(search) {\n  const params = `${new URLSearchParams(search)}`\n  history.pushState(null, undefined, params ? `?${params}` : location.pathname);\n}\n\nexport function updateKeyboard() {\n  document.querySelectorAll('.keyboard button:disabled')\n    .forEach((el) => {\n      el.disabled = false;\n    });\n  // all valid if \"?\"\n  const char = document.querySelector('.tile.selected')?._tile.isUnknown;\n  if (char) {\n    if (char !== '_') {\n      document.querySelector(`.keyboard button[data-key=\"${char}\"]`).disabled = true;\n    }\n  } else {\n    const validLetters = current.letters;\n    document.querySelectorAll('.keyboard button:not([data-special])').forEach((el) => {\n      const key = el.dataset.key.toLowerCase();\n      el.disabled = !validLetters.includes(key);\n    });\n  }\n}\n\ndocument.addEventListener('DOMContentLoaded', processURL);\n", "if (!document.querySelector('.keyboard')) {\n  import('./game.js');\n}\n"],
  "mappings": "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",
  "names": ["makeButton", "key", "button", "getLabel", "shiftKey", "onClick", "updateShiftButton", "el", "keys", "keyboard", "init_Keyboard", "__esmMin", "isTrusted", "row", "container", "EVENT_NAME", "UPDATE_EVENT", "_uniqueId", "_eventManager", "_locked", "_char", "_code", "_Clue_instances", "set_fn", "isLocked_fn", "_Clue", "Clue", "init_Clue", "__esmMin", "code", "__privateAdd", "__privateSet", "__privateGet", "__privateMethod", "__privateWrapper", "symbol", "listener", "removeClass", "className", "classList", "init_utils", "__esmMin", "getChar", "char", "getCode", "code", "onClick", "removeClass", "updateKeyboard", "tileContent", "_clue", "_puzzle", "_container", "_Tile_instances", "reset_fn", "update_fn", "_Tile", "Tile", "init_Tile", "__esmMin", "init_Puzzle", "init_game", "init_utils", "clue", "puzzle", "__privateAdd", "__privateSet", "__privateMethod", "e", "Puzzle", "__privateGet", "container", "ALPHA", "_clues", "_Puzzle_instances", "values_get", "Puzzle", "init_Puzzle", "__esmMin", "init_Clue", "init_Tile", "clues", "guesses", "__privateAdd", "word", "index", "__privateGet", "Clue", "clue", "num", "char", "number", "letters", "code", "numbers", "symbol", "letter", "isSameCharacter", "Tile", "acc", "game_exports", "__export", "updateKeyboard", "load", "rawPuzzle", "guesses", "clues", "word", "clue", "num", "puzzle", "Puzzle", "current", "board", "newWordGroup", "container", "isSpace", "getChar", "event", "key", "removeClass", "selectNext", "reverse", "_a", "selected", "elements", "length", "next", "index", "modifier", "group", "processURL", "pathname", "search", "params", "updateUrlParams", "el", "char", "validLetters", "init_game", "__esmMin", "init_Keyboard", "init_Puzzle", "init_utils", "ctrlKey", "repeat", "shiftKey"]
}
